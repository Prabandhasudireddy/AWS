pipeline{
       agent any	
    //agent { label '"############"'}
     environment {
        AWS_ACCOUNT_ID="############"
        AWS_DEFAULT_REGION="############"
        IMAGE_NAME="############"
        IMAGE_TAG="############"
        CONTAINER_NAME="############"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_NAME}":${IMAGE_TAG}"
    }
    
    stages {
        
         stage('Logging into AWS ECR') {
            steps {
                script {
                    sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
                }
                 
            }
        }
        
        
        stage("cloning git repository"){
            steps{
                git branch: '"############"', credentialsId: 'git_credentials', url: '"############"'
            }
        }    
        stage("build"){
            steps{
               sh "mvn clean install"
            }    
        }
        
        stage('Building image') {
            steps{
                script {
                    dockerImage = docker.build "${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }
   
    // Uploading Docker images into AWS ECR
    stage('Pushing to ECR') {
     steps{  
         script {
                sh "docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}"
                sh "docker push ${REPOSITORY_URI}"
            }
        }
     } 
     
     stage('Stop and delete the running container') {
         steps{  
             catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
                    sh "docker stop ${CONTAINER_NAME}"
                    sh "docker rm ${CONTAINER_NAME}"
             }    
            }
         }
   
     stage('Install docker'){           
         agent { label 'BackendServer'}  
            steps{ 
               sh "docker run -d --name ${CONTAINER_NAME} -p 8081:8081 ${IMAGE_NAME}:${IMAGE_TAG}"
            }
        }   
    }
}
